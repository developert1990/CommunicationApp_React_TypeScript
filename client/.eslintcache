[{"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\App.tsx":"1","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\RegisterScreen.tsx":"2","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\index.tsx":"3","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\config\\index.ts":"4","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\constants\\userConstants.ts":"5","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\reducers\\userReducer.ts":"6","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\actions\\userActions.ts":"7","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\index.tsx":"8","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\store.ts":"9","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\routes\\router.tsx":"10","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\Navbar.tsx":"11","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\SigninScreen.tsx":"12","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\PrivateRoute.tsx":"13","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\UserImage.tsx":"14","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\constants\\postConstants.ts":"15","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\actions\\postActions.ts":"16","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\reducers\\postReducer.ts":"17","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\Posts.tsx":"18","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\utils\\utils.ts":"19","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\SinglePost.tsx":"20","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\Reply.tsx":"21","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\actions\\replyActions.ts":"22","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\constants\\replyConstants.ts":"23","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\reducers\\replyReducer.ts":"24","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\ThirdColumn.tsx":"25","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\ProfileScreen.tsx":"26","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\ProfileReplies.tsx":"27","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\ProfilePosts.tsx":"28","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\HomeScreen.tsx":"29","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\FollowModal.tsx":"30","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\ImgUploadModal.tsx":"31","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\CoverImgUploadModal.tsx":"32","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\SearchScreen.tsx":"33","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\SearchPosts.tsx":"34","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\SearchUsers.tsx":"35","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\constants\\searchConstants.ts":"36","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\MessageScreen.tsx":"37","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\NewMessageScreen.tsx":"38","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\ToggleAlert.tsx":"39","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\actions\\searchAction.ts":"40","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\constants\\chatConstants.ts":"41","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\actions\\chatAction.ts":"42","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\reducers\\chatReducer.ts":"43","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\ChatScreen.tsx":"44","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\CheckValidChatRoute.tsx":"45","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\InvalidPage.tsx":"46","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\MessageContents.tsx":"47","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\reducers\\searchReducer.ts":"48","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\NotificationScreen.tsx":"49","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\constants\\notificationConstants.ts":"50","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\actions\\notificationAction.ts":"51","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\reducers\\notificationReducer.ts":"52","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\LoadingSpinner.tsx":"53","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\socketio.ts":"54"},{"size":180,"mtime":1608078380877,"results":"55","hashOfConfig":"56"},{"size":3830,"mtime":1608097240564,"results":"57","hashOfConfig":"56"},{"size":351,"mtime":1608005785620,"results":"58","hashOfConfig":"56"},{"size":48,"mtime":1607973570394,"results":"59","hashOfConfig":"56"},{"size":867,"mtime":1608521145045,"results":"60","hashOfConfig":"56"},{"size":3982,"mtime":1608665205176,"results":"61","hashOfConfig":"56"},{"size":3842,"mtime":1608875577728,"results":"62","hashOfConfig":"56"},{"size":305,"mtime":1609614154670,"results":"63","hashOfConfig":"56"},{"size":5102,"mtime":1609621458900,"results":"64","hashOfConfig":"56"},{"size":1922,"mtime":1609533300284,"results":"65","hashOfConfig":"56"},{"size":2765,"mtime":1609812745518,"results":"66","hashOfConfig":"56"},{"size":1964,"mtime":1608182861671,"results":"67","hashOfConfig":"56"},{"size":847,"mtime":1608182953931,"results":"68","hashOfConfig":"56"},{"size":610,"mtime":1608671575549,"results":"69","hashOfConfig":"56"},{"size":1093,"mtime":1608462240904,"results":"70","hashOfConfig":"56"},{"size":4440,"mtime":1608872995807,"results":"71","hashOfConfig":"56"},{"size":4723,"mtime":1608493790065,"results":"72","hashOfConfig":"56"},{"size":5062,"mtime":1609550561213,"results":"73","hashOfConfig":"56"},{"size":2253,"mtime":1609570159126,"results":"74","hashOfConfig":"56"},{"size":4520,"mtime":1608750639518,"results":"75","hashOfConfig":"56"},{"size":5623,"mtime":1609581986623,"results":"76","hashOfConfig":"56"},{"size":1093,"mtime":1608881626130,"results":"77","hashOfConfig":"56"},{"size":244,"mtime":1608497603358,"results":"78","hashOfConfig":"56"},{"size":1026,"mtime":1608497565487,"results":"79","hashOfConfig":"56"},{"size":347,"mtime":1608360899574,"results":"80","hashOfConfig":"56"},{"size":15922,"mtime":1609809738610,"results":"81","hashOfConfig":"56"},{"size":2644,"mtime":1609615436107,"results":"82","hashOfConfig":"56"},{"size":1281,"mtime":1609615283649,"results":"83","hashOfConfig":"56"},{"size":3666,"mtime":1609614653676,"results":"84","hashOfConfig":"56"},{"size":5743,"mtime":1608882275391,"results":"85","hashOfConfig":"56"},{"size":4255,"mtime":1608873686417,"results":"86","hashOfConfig":"56"},{"size":4300,"mtime":1608873047944,"results":"87","hashOfConfig":"56"},{"size":3809,"mtime":1608747876253,"results":"88","hashOfConfig":"56"},{"size":1278,"mtime":1609615381707,"results":"89","hashOfConfig":"56"},{"size":2549,"mtime":1609615348474,"results":"90","hashOfConfig":"56"},{"size":468,"mtime":1608698468654,"results":"91","hashOfConfig":"56"},{"size":5556,"mtime":1609815773061,"results":"92","hashOfConfig":"56"},{"size":6545,"mtime":1609816525620,"results":"93","hashOfConfig":"56"},{"size":736,"mtime":1608751069791,"results":"94","hashOfConfig":"56"},{"size":1831,"mtime":1608881525656,"results":"95","hashOfConfig":"56"},{"size":1161,"mtime":1609620966845,"results":"96","hashOfConfig":"56"},{"size":3811,"mtime":1609797338744,"results":"97","hashOfConfig":"56"},{"size":4843,"mtime":1609795198004,"results":"98","hashOfConfig":"56"},{"size":12586,"mtime":1609816546281,"results":"99","hashOfConfig":"56"},{"size":999,"mtime":1609320293547,"results":"100","hashOfConfig":"56"},{"size":544,"mtime":1609235789660,"results":"101","hashOfConfig":"56"},{"size":1461,"mtime":1609488123877,"results":"102","hashOfConfig":"56"},{"size":1889,"mtime":1608698948699,"results":"103","hashOfConfig":"56"},{"size":5617,"mtime":1609659982394,"results":"104","hashOfConfig":"56"},{"size":528,"mtime":1609578165742,"results":"105","hashOfConfig":"56"},{"size":1628,"mtime":1609660023764,"results":"106","hashOfConfig":"56"},{"size":2276,"mtime":1609578530422,"results":"107","hashOfConfig":"56"},{"size":263,"mtime":1609614820834,"results":"108","hashOfConfig":"56"},{"size":405,"mtime":1609808604094,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"r4yoid",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"112"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"124"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"121"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":1,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"124"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"121"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"222"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"124"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\App.tsx",[],["236","237"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\RegisterScreen.tsx",[],["238","239"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\index.tsx",[],["240","241"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\config\\index.ts",[],["242","243"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\constants\\userConstants.ts",[],["244","245"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\reducers\\userReducer.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\actions\\userActions.ts",["246"],"import { USER_REGISTER_REQUEST, USER_REGISTER_FAIL, USER_REGISTER_SUCCESS, USER_SINGIN_REQUEST, USER_SINGIN_FAIL, USER_SINGIN_SUCCESS, USER_SIGNOUT, USER_DETAIL_REQUEST, USER_DETAIL_SUCCESS, USER_DETAIL_FAIL, USER_INFO_REQUEST, USER_INFO_SUCCESS, USER_INFO_FAIL, USER_INFO_RESET } from './../constants/userConstants';\r\nimport Axios from 'axios';\r\nimport { ThunkDispatch } from 'redux-thunk';\r\nimport { API_BASE } from '../config/index';\r\n\r\nexport const register = (firstName: string, lastName: string, userName: string, email: string, password: string) => async (dispatch: ThunkDispatch<any, any, any>) => {\r\n    dispatch({ type: USER_REGISTER_REQUEST });\r\n    try {\r\n        const { data } = await Axios.post(`${API_BASE}/users/register`, { firstName, lastName, userName, email, password }, { withCredentials: true });\r\n        dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n        // dispatch signin success \r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n        // dispatch({ type: USER_REGISTER_RESET });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const signin = (userName: string, password: string) => async (dispatch: ThunkDispatch<any, any, any>) => {\r\n\r\n    dispatch({ type: USER_SINGIN_REQUEST });\r\n    try {\r\n        const { data } = await Axios.post(`${API_BASE}/users/signin`, { userName, password }, { withCredentials: true });\r\n        dispatch({ type: USER_SINGIN_SUCCESS, payload: data });\r\n        dispatch({ type: USER_DETAIL_SUCCESS, payload: data });\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_SINGIN_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n};\r\n\r\nexport const signout = () => (dispatch: ThunkDispatch<any, any, any>) => {\r\n    localStorage.removeItem(\"userInfo\");\r\n    dispatch({ type: USER_SIGNOUT });\r\n}\r\n\r\nexport const userDetail = () => async (dispatch: ThunkDispatch<any, any, any>, getState: () => any) => {\r\n    dispatch({ type: USER_DETAIL_REQUEST })\r\n    const { signinStore: { signinInfo } } = getState();\r\n    // console.log('signinInfo', signinInfo)\r\n    try {\r\n        const { data } = await Axios.get(`${API_BASE}/users/detail/${signinInfo._id}`, {\r\n            // headers: { Authorization: `Hong ${signinInfo.token}` },\r\n            withCredentials: true\r\n        });\r\n\r\n        // console.log(\"유저 디테일 뽑음\", data)\r\n        dispatch({ type: USER_DETAIL_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAIL_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userInfo = (userId: string) => async (dispatch: ThunkDispatch<any, any, any>, getState: () => any) => {\r\n    dispatch({ type: USER_INFO_REQUEST })\r\n    const { signinStore: { signinInfo } } = getState();\r\n    // console.log('signinInfo', signinInfo)\r\n    try {\r\n        const { data } = await Axios.get(`${API_BASE}/users/info/${userId}`, {\r\n            headers: { Authorization: `Hong ${signinInfo.token}` },\r\n            withCredentials: true\r\n        });\r\n\r\n        dispatch({ type: USER_INFO_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_INFO_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\index.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\store.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\routes\\router.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\Navbar.tsx",["247","248","249"],"import { Badge } from '@material-ui/core'\r\nimport Axios from 'axios'\r\nimport React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { getUnreadMessages } from '../actions/chatAction'\r\nimport { getUnReadNotification } from '../actions/notificationAction'\r\nimport { signout } from '../actions/userActions'\r\nimport { API_BASE } from '../config'\r\nimport { initialAppStateType } from '../store';\r\nimport { io, Socket } from 'socket.io-client';\r\n\r\n\r\n// let socket: Socket = io(\"http://localhost:9003\");;\r\n\r\nexport const Navbar = () => {\r\n\r\n    const signinInfoStore = useSelector((state: initialAppStateType) => state.signinStore);\r\n    const { signinInfo } = signinInfoStore;\r\n\r\n    const unReadNotificationsStore = useSelector((state: initialAppStateType) => state.unReadNotificationStore);\r\n    const { notifications: unReadNotifications } = unReadNotificationsStore;\r\n\r\n    const unReadMessagesStore = useSelector((state: initialAppStateType) => state.unReadMessagesStore);\r\n    const { messages: unReadMessages } = unReadMessagesStore;\r\n\r\n\r\n\r\n    console.log('unReadMessages: ', unReadMessages)\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const handleSignout = async () => {\r\n        const { data } = await Axios.get(`${API_BASE}/users/signout`);\r\n        console.log('data signout:  ', data);\r\n        dispatch(signout());\r\n        history.push('/signin');\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getUnReadNotification());\r\n        // dispatch(getUnreadMessages());\r\n    }, [dispatch])\r\n\r\n\r\n    return (\r\n        <div className=\"nav col-2\"> {/* 이 태그의 크기를 항상 10중에 2로 해준다. */}\r\n            <Link to=\"/\" className=\"redColor\"><i className=\"fas fa-cat\"></i></Link>\r\n            <Link to=\"/\"><i className=\"fas fa-home\"></i></Link>\r\n            <Link to=\"/search/posts\"><i className=\"fas fa-search\"></i></Link>\r\n\r\n            <Link to=\"/notification\">\r\n                <Badge badgeContent={unReadNotifications && unReadNotifications.length} color=\"secondary\">\r\n                    <i className=\"fas fa-bell\"></i>\r\n                </Badge>\r\n            </Link>\r\n            <Link to=\"/message\">\r\n                <Badge badgeContent={unReadMessages && unReadMessages.length} color=\"secondary\">\r\n                    <i className=\"fas fa-comment\"></i>\r\n                </Badge>\r\n            </Link>\r\n            <Link to={{\r\n                pathname: `/profile/${signinInfo.userName}`,\r\n                state: signinInfo,\r\n\r\n            }}><i className=\"fas fa-user\"></i></Link>\r\n            <Link to=\"/\" onClick={handleSignout}><i className=\"fas fa-sign-out-alt\"></i></Link>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\SigninScreen.tsx",[],["250","251"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\PrivateRoute.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\UserImage.tsx",["252"],"import React, { useEffect } from 'react'\r\nimport { API_BASE } from '../config';\r\nimport { SigninType } from '../reducers/userReducer';\r\n\r\ninterface UserImageProps {\r\n    userInfo: SigninType;\r\n    userDetailInfo: SigninType | undefined;\r\n}\r\n\r\nexport const UserImage: React.FC<UserImageProps> = ({ userInfo, userDetailInfo }) => {\r\n    return (\r\n        <div className=\"userImageContainer\">\r\n            <img\r\n                src={`${API_BASE}/uploads/images/${userDetailInfo === undefined ? userInfo.profilePic : userDetailInfo.profilePic}`}\r\n                alt=\"User's profile\" />\r\n        </div>\r\n    )\r\n}\r\n",["253","254"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\constants\\postConstants.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\actions\\postActions.ts",["255","256"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\reducers\\postReducer.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\Posts.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\utils\\utils.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\SinglePost.tsx",["257","258","259","260"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\Reply.tsx",["261","262"],"import React, { Dispatch, SetStateAction, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { API_BASE } from '../config';\r\nimport { postDataType, replyType } from '../reducers/postReducer';\r\nimport { timeDifference, useStyles } from '../utils/utils';\r\nimport { deleteReply } from '../actions/replyActions';\r\nimport { SigninType } from '../reducers/userReducer';\r\nimport { REPLY_DELETE_RESET } from '../constants/replyConstants';\r\nimport { ToggleAlert } from './ToggleAlert';\r\n\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\r\nimport Pagination, { UsePaginationProps } from '@material-ui/lab/Pagination';\r\nimport { initialAppStateType } from '../store';\r\n\r\n\r\nexport interface ReplyPropsType {\r\n    post: postDataType;\r\n    signinInfo: SigninType;\r\n    updatedPostData: postDataType;\r\n    setUpdatedPostData?: Dispatch<SetStateAction<postDataType>>;\r\n}\r\n\r\nexport const Reply: React.FC<ReplyPropsType> = ({ post, signinInfo, updatedPostData, setUpdatedPostData }) => {\r\n\r\n    const [open, setOpen] = useState<boolean>(false);\r\n    const [alertMsg, setAlertMsg] = useState<string>(\"\");\r\n\r\n    const getRepliedTime = (reply: replyType) => {\r\n        const repliedTime = timeDifference(new Date().valueOf(), new Date(reply.createdAt).valueOf());\r\n        return repliedTime;\r\n    }\r\n\r\n    const replyDeleteStore = useSelector((state: initialAppStateType) => state.replyDeleteStore);\r\n    const { error: errorDelete, loading: loadingDelete, result: resultDelete } = replyDeleteStore;\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const handleDelete = (replyId: string, postId: string) => {\r\n        dispatch(deleteReply(replyId, postId));\r\n        setAlertMsg(\"Deleted\")\r\n        setOpen(true);\r\n    }\r\n\r\n\r\n    if (resultDelete && setUpdatedPostData !== undefined) {\r\n        setUpdatedPostData(resultDelete); // delete 하고 난 후에 해당 post데이터를 setUpdatePostData 로 state에 넣어준다. \r\n        dispatch({ type: REPLY_DELETE_RESET }) // 여기 리셋을 시켜줘야 버그(reply 를 delete 하고난 후에 heart 클릭하면 작동안함) 해결됬음\r\n    }\r\n\r\n    const sortedReplies = updatedPostData.replies && updatedPostData.replies.sort((reply_A, reply_B) => {\r\n        const A_time = new Date(reply_A.createdAt).valueOf();\r\n        const B_time = new Date(reply_B.createdAt).valueOf();\r\n        return B_time - A_time;\r\n    });\r\n\r\n\r\n    // pagination\r\n    const classes = useStyles();\r\n    const [page, setPage] = useState<number>(1);\r\n    const [pageData, setPageData] = useState<replyType[]>([]);\r\n    const dataLimit = 5;\r\n    const indexOfLast = page * dataLimit;\r\n    const indexOfFirst = indexOfLast - dataLimit;\r\n    const handlePageChange: UsePaginationProps[\"onChange\"] = (event: React.ChangeEvent<unknown>, value: number) => {\r\n        setPage(value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (sortedReplies) {\r\n            setPageData(sortedReplies.slice(indexOfFirst, indexOfLast));\r\n        }\r\n    }, [indexOfFirst, indexOfLast, sortedReplies])\r\n\r\n    // ****************************\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            { sortedReplies && sortedReplies.length !== 0 &&\r\n                <div >\r\n                    {\r\n                        pageData &&\r\n                        pageData.map((reply) => {\r\n                            return (\r\n                                <div className=\"each__reply\" key={reply._id}>\r\n                                    <div className=\"top__reply\">\r\n                                        <div className=\"userImageContainer__reply\">\r\n                                            <img src={`${API_BASE}/uploads/images/${reply.repliedBy.profilePic}`} alt=\"profile\" />\r\n                                        </div>\r\n                                        <div className=\"comment__reply\">\r\n                                            <span>{reply.repliedBy.firstName + \" \" + reply.repliedBy.lastName}</span>\r\n                                            <span> {reply.comment}</span>\r\n                                        </div>\r\n                                        {\r\n                                            (reply.repliedBy._id === signinInfo._id || signinInfo._id === post.postedBy._id) &&\r\n                                            <span className=\"deleteReplyBtn\">\r\n                                                <button className=\"deleteReplyIcon\" onClick={() => handleDelete(reply._id, post._id)}>\r\n                                                    <DeleteOutlinedIcon />\r\n                                                </button>\r\n                                            </span>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"time__reply\">\r\n                                        {getRepliedTime(reply)}\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                    {\r\n                        (sortedReplies.length / dataLimit) >= 1 &&\r\n                        <div className={`${classes.root} pagination__reply`}>\r\n                            <Pagination count={Math.ceil(sortedReplies.length / dataLimit)} color=\"primary\" size=\"small\" page={page} onChange={handlePageChange} />\r\n                        </div>\r\n                    }\r\n                    <ToggleAlert open={open} handleAlertClose={() => setOpen(false)} alertMsg={alertMsg} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\actions\\replyActions.ts",["263"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\constants\\replyConstants.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\reducers\\replyReducer.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\ThirdColumn.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\ProfileScreen.tsx",["264","265","266","267"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\ProfileReplies.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\ProfilePosts.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\HomeScreen.tsx",["268","269","270","271"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\FollowModal.tsx",["272","273","274","275","276"],"import Axios from 'axios';\r\nimport React, { Dispatch, SetStateAction, useEffect, useState } from 'react';\r\nimport { Button, Modal } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport { API_BASE } from '../config';\r\nimport { SigninType } from '../reducers/userReducer';\r\nimport { initialAppStateType } from '../store';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport interface populatedSigninType {\r\n    _id: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    userName: string;\r\n    email: string;\r\n    profilePic: string;\r\n    token: string;\r\n    likes: string[];\r\n    followers: SigninType[];\r\n    following: SigninType[];\r\n}\r\n\r\nexport interface ModalPropsType {\r\n    handleClose: () => void;\r\n    data: string;\r\n    chooseBtn: string;\r\n}\r\n\r\nexport const FollowModal: React.FC<ModalPropsType> = ({ handleClose, data, chooseBtn }) => {\r\n\r\n    const [populatedData, setPopulatedData] = useState<populatedSigninType>();\r\n    const [followers, setFollowers] = useState([]);\r\n    const [following, setFollowing] = useState([]);\r\n\r\n    const signinInfoStore = useSelector((state: initialAppStateType) => state.signinStore);\r\n    const { signinInfo } = signinInfoStore;\r\n\r\n    const selectedUserId = data;\r\n\r\n    useEffect(() => {\r\n\r\n        (\r\n            async () => {\r\n                const { data } = await Axios.get(`${API_BASE}/users/${selectedUserId}/${chooseBtn}`, {\r\n                    // headers: { Authorization: `Hong ${signinInfo.token}` },\r\n                    withCredentials: true\r\n                });\r\n                setPopulatedData(data);\r\n            }\r\n        )();\r\n    }, [chooseBtn, followers, following, selectedUserId, signinInfo.token])\r\n\r\n    console.log('populatedData', typeof populatedData?.followers[0] === \"object\");\r\n\r\n    return (\r\n        <div>{\r\n\r\n            typeof populatedData?.followers[0] === \"object\" ? (\r\n                <div>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Follower</Modal.Title>\r\n                    </Modal.Header>\r\n                    {\r\n                        populatedData.followers.map((follower) => {\r\n                            return (\r\n\r\n                                <Modal.Body>\r\n                                    <div className=\"user\" key={follower._id}>\r\n                                        <div className=\"userImageContainer\">\r\n                                            <img src={`${API_BASE}/uploads/images/${follower.profilePic}`} alt=\"profile\" />\r\n                                        </div>\r\n                                        <div className=\"userDetailsContainer\">\r\n                                            <div className=\"header\">\r\n                                                <Link to={\r\n                                                    {\r\n                                                        pathname: `/profile/${follower?.userName}`,\r\n                                                        state: follower,\r\n                                                    }\r\n                                                }\r\n                                                    onClick={handleClose}\r\n                                                    className=\"displayName\">{follower?.firstName + \" \" + follower?.lastName}</Link>\r\n                                                <span className=\"username\">@{follower?.userName}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Modal.Body>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                </div>\r\n            ) : (\r\n                    <div>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Following</Modal.Title>\r\n                        </Modal.Header>\r\n                        {\r\n\r\n                            populatedData?.following.map((following) => {\r\n                                return (\r\n\r\n                                    <Modal.Body>\r\n                                        <div className=\"user\">\r\n                                            <div className=\"userImageContainer\">\r\n                                                <img src={`${API_BASE}/uploads/images/${following.profilePic}`} alt=\"profile\" />\r\n                                            </div>\r\n                                            <div className=\"userDetailsContainer\">\r\n                                                <div className=\"header\">\r\n                                                    <Link to={\r\n                                                        {\r\n                                                            pathname: `/profile/${following?.userName}`,\r\n                                                            state: following,\r\n                                                        }\r\n                                                    }\r\n                                                        onClick={handleClose}\r\n                                                        className=\"displayName\">{following?.firstName + \" \" + following?.lastName}</Link>\r\n                                                    <span className=\"username\">@{following?.userName}</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </Modal.Body>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                )\r\n        }\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\ImgUploadModal.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\CoverImgUploadModal.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\SearchScreen.tsx",["277","278"],"import React, { ChangeEvent, FormEvent, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, Route, useHistory, useLocation } from 'react-router-dom';\r\nimport { initialAppStateType } from '../store';\r\nimport { SearchPosts } from '../components/SearchPosts';\r\nimport { SearchUsers } from '../components/SearchUsers';\r\nimport { searchPosts, searchUsers } from '../actions/searchAction';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\nexport const SearchScreen = () => {\r\n\r\n    const [search, setSearch] = useState<string>(\"\");\r\n    // const [searchedPosts, setSearchedPosts] = useState<postDataType[]>([]);\r\n    // const [searchedUsers, setSearchedUsers] = useState<SigninType[]>([]);\r\n\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const slicedUrl = location.pathname.slice(14);\r\n\r\n\r\n    const searchPostsStore = useSelector((state: initialAppStateType) => state.searchPostsStore);\r\n    const { error: errorPosts, loading: loadingPosts, posts } = searchPostsStore;\r\n\r\n    const searchUsersStore = useSelector((state: initialAppStateType) => state.searchUsersStore);\r\n    const { error: errorUsers, loading: loadingUsers, users } = searchUsersStore;\r\n\r\n\r\n    // Post 랑 Replies 버튼 클릭시 bottom border색 주기 위함\r\n    const [activePost, setActivePost] = useState<boolean>(true);\r\n    const [activeReplies, setActiveReplies] = useState<boolean>(false);\r\n    const handleActivePost = () => {\r\n        setActivePost(true);\r\n        setActiveReplies(false);\r\n    }\r\n    const handleActiveReplies = () => {\r\n        setActiveReplies(true);\r\n        setActivePost(false);\r\n    }\r\n    // *************************************************************\r\n\r\n\r\n\r\n    const handleSearch = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setSearch(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        if (slicedUrl === \"\") {\r\n            dispatch(searchPosts(search))\r\n        } else {\r\n            dispatch(searchUsers(search))\r\n        }\r\n        setSearch(\"\");\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mainSectionContainer col-10 col-md-8\">\r\n                <div className=\"SearchHeaderContainer\">\r\n                    <div className=\"titleContainer\">\r\n                        <h1>Search</h1>\r\n                    </div>\r\n                    <form className=\"search__form\" noValidate autoComplete=\"off\" onSubmit={handleSubmit} >\r\n                        <TextField id=\"standard-basic\" label=\"Search for users or posts\" autoFocus={true} onChange={handleSearch} value={search} />\r\n                        <SearchIcon />\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"tabsContainer\">\r\n                    <Link to={`/search/posts`}\r\n                        className={`tab ${activePost ? \"active\" : \"\"}`}\r\n                        onClick={handleActivePost}\r\n                    >Posts</Link>\r\n                    <Link to={`/search/posts/users`}\r\n                        className={`tab ${activeReplies ? \"active\" : \"\"}`}\r\n                        onClick={handleActiveReplies}\r\n                    >Users</Link>\r\n                </div>\r\n\r\n                <div className=\"postsContainer\">\r\n                    <Route path={`/search/posts`} render={() => <SearchPosts posts={posts} loadingPosts={loadingPosts} errorPosts={errorPosts} />} exact />\r\n                    <Route path={`/search/posts/users`} render={() => <SearchUsers users={users} loadingUsers={loadingUsers} errorUsers={errorUsers} />} />\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\SearchPosts.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\SearchUsers.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\constants\\searchConstants.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\MessageScreen.tsx",["279","280","281"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\NewMessageScreen.tsx",["282","283","284"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\ToggleAlert.tsx",["285"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\actions\\searchAction.ts",[],["286","287"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\constants\\chatConstants.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\actions\\chatAction.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\reducers\\chatReducer.ts",[],["288","289"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\ChatScreen.tsx",["290","291","292","293"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\CheckValidChatRoute.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\InvalidPage.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\MessageContents.tsx",["294","295","296","297","298","299"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getChatMessages } from '../actions/chatAction';\r\nimport { ChatMessageType } from '../reducers/chatReducer';\r\nimport { SigninType } from '../reducers/userReducer';\r\nimport { initialAppStateType } from '../store';\r\n\r\nexport interface MessagecontentsPropsType {\r\n    signinInfo: SigninType;\r\n    chatArr: ChatMessageType[];\r\n}\r\n\r\nexport const MessageContents: React.FC<MessagecontentsPropsType> = ({ signinInfo, chatArr }) => {\r\n\r\n\r\n    console.log('chatArr: =>>>>> ', chatArr)\r\n\r\n\r\n\r\n\r\n\r\n    const messageSender = (message: ChatMessageType) => {\r\n        const isMine = message.sender._id === signinInfo._id;\r\n        const liClassName = isMine ? \"mine\" : \"theirs\";\r\n        return liClassName;\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {// <div>채팅</div>\r\n                chatArr &&\r\n                chatArr.map((message) => {\r\n\r\n\r\n                    return (\r\n                        <li className={`message ${messageSender(message)}`} key={message._id}>\r\n                            <div className=\"messageContainer\">\r\n                                <span className=\"messageBody\">\r\n                                    {message.content}\r\n                                </span>\r\n                            </div>\r\n                        </li>\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\reducers\\searchReducer.ts",[],["300","301"],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\screens\\NotificationScreen.tsx",["302","303"],"import React, { useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { initialAppStateType } from '../store';\r\nimport { getNotification, getUnReadNotification } from '../actions/notificationAction';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { API_BASE } from '../config';\r\nimport { getNotificationTextFilter, getNotificationURL } from '../utils/utils';\r\nimport { notificationType } from '../reducers/notificationReducer';\r\nimport Axios from 'axios';\r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nexport const NotificationScreen = () => {\r\n\r\n    const notificationStore = useSelector((state: initialAppStateType) => state.notificationStore);\r\n    const { error, loading, notifications } = notificationStore;\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n\r\n    // 각 알림을 클릭 햇을 경우 db에서 notification collection에 open 을 false 에서 true로 변경하기위함\r\n    const handleNotification = async (notification: notificationType) => {\r\n        // console.log('notification: ', notification);\r\n        await Axios.put(`${API_BASE}/notifications/markNotiOpened/${notification._id}`, {}, {\r\n            withCredentials: true,\r\n        });\r\n        // 알림을 읽으면 navbar에 표시된 읽지 않은 알림이 있는지 다시 받아서 숫자를 변경한다.\r\n        dispatch(getUnReadNotification());\r\n    }\r\n\r\n    const handleReadAll = async () => {\r\n        await Axios.put(`${API_BASE}/notifications/markAllNotiOpened/`, {}, {\r\n            withCredentials: true,\r\n        });\r\n        // 알림을 한번에 모두 확인(opened = true)로 바꾸는 걸 콜하고 바로 리랜더를 통해서 update된 notifications들을 불러오게 하기 위해서 사용했다.\r\n        dispatch(getNotification());\r\n    }\r\n\r\n    const markAllClassName = () => {\r\n        const numOfUnreadNoti = notifications.filter((noti) => noti.opened === false).length\r\n\r\n        if (numOfUnreadNoti > 0) {\r\n            return \"markAll__active\"\r\n        }\r\n        return \"markAll__inactive\"\r\n    }\r\n\r\n    const deleteAllClassName = () => {\r\n        const numOfNotification = notifications.length\r\n\r\n        if (numOfNotification > 0) {\r\n            return \"deleteAll__active\"\r\n        }\r\n        return \"deleteAll__inactive\"\r\n    }\r\n\r\n    const handleDelete = async () => {\r\n        await Axios.delete(`${API_BASE}/notifications/deleteAll/`, {\r\n            withCredentials: true,\r\n        });\r\n        // 알림을 모두 지우고 update된 notifications들을 불러오게 하기 위해서 사용했다.\r\n        dispatch(getNotification());\r\n        // 알림을 모두 지우면 navbar에 표시된 읽지 않은 알림이 있는지 다시 받아서 숫자를 변경한다.\r\n        dispatch(getUnReadNotification());\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getNotification())\r\n    }, [dispatch,])\r\n\r\n    return (\r\n        <div className=\"mainSectionContainer col-10 col-md-8\">\r\n            <div className=\"titleContainer\">\r\n                <h1>Notification</h1>\r\n                <Tooltip title=\"Read All\">\r\n                    <button className={`${notifications && markAllClassName()}`} id=\"markNotificationsAsRead\" onClick={handleReadAll}>\r\n                        <i className=\"fas fa-check-double\"></i>\r\n                    </button>\r\n                </Tooltip>\r\n                <Tooltip title=\"Delete All\" className={`${notifications && deleteAllClassName()}`}>\r\n                    <button id=\"markNotificationsAsRead\" onClick={handleDelete}>\r\n                        <i className=\"fas fa-trash-alt\"></i>\r\n                    </button>\r\n                </Tooltip>\r\n            </div>\r\n            {error && error}\r\n            {loading && loading}\r\n            {\r\n                notifications && notifications.length > 0 ?\r\n                    notifications.map((notification) => {\r\n                        const userFrom = notification.userFrom;\r\n                        const firstName = userFrom.firstName;\r\n                        const lastName = userFrom.lastName;\r\n                        const className = notification.opened ? \"notifyInActive\" : \"notifyActive\";\r\n\r\n                        return (\r\n                            <Link to={{\r\n                                pathname: `${getNotificationURL(notification)}`,\r\n                                state: notification.userFrom\r\n                            }} key={notification._id} className={`notification resultlistitem ${className}`}\r\n                                onClick={() => handleNotification(notification)}\r\n                            >\r\n\r\n                                <div className=\"userImageContainer\">\r\n                                    <img src={`${API_BASE}/uploads/images/${userFrom.profilePic}`} alt=\"user profile\" />\r\n                                </div>\r\n\r\n                                <div className=\"resultsDetailscontainer ellipsis\">\r\n                                    <span className=\"ellipsis\">{`${firstName} ${lastName}, ${getNotificationTextFilter(notification)}`}</span>\r\n                                    {/* <Alert className=\"ellipsis\" severity=\"info\">{`${firstName} ${lastName}, ${getNotificationTextFilter(notification)}`}</Alert> */}\r\n                                </div>\r\n                            </Link>\r\n                        )\r\n                    }) : (\r\n                        <Alert severity=\"warning\">You have no Notifications.</Alert>\r\n                    )\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\constants\\notificationConstants.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\actions\\notificationAction.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\reducers\\notificationReducer.ts",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\LoadingSpinner.tsx",[],"C:\\Users\\703922\\.vscode\\React\\React_TypeScript\\CommunicatingApp-TypeScript\\client\\src\\components\\socketio.ts",[],{"ruleId":"304","replacedBy":"305"},{"ruleId":"306","replacedBy":"307"},{"ruleId":"304","replacedBy":"308"},{"ruleId":"306","replacedBy":"309"},{"ruleId":"304","replacedBy":"310"},{"ruleId":"306","replacedBy":"311"},{"ruleId":"304","replacedBy":"312"},{"ruleId":"306","replacedBy":"313"},{"ruleId":"304","replacedBy":"314"},{"ruleId":"306","replacedBy":"315"},{"ruleId":"316","severity":1,"message":"317","line":1,"column":264,"nodeType":"318","messageId":"319","endLine":1,"endColumn":279},{"ruleId":"316","severity":1,"message":"320","line":6,"column":10,"nodeType":"318","messageId":"319","endLine":6,"endColumn":27},{"ruleId":"316","severity":1,"message":"321","line":11,"column":10,"nodeType":"318","messageId":"319","endLine":11,"endColumn":12},{"ruleId":"316","severity":1,"message":"322","line":11,"column":14,"nodeType":"318","messageId":"319","endLine":11,"endColumn":20},{"ruleId":"304","replacedBy":"323"},{"ruleId":"306","replacedBy":"324"},{"ruleId":"316","severity":1,"message":"325","line":1,"column":17,"nodeType":"318","messageId":"319","endLine":1,"endColumn":26},{"ruleId":"304","replacedBy":"326"},{"ruleId":"306","replacedBy":"327"},{"ruleId":"316","severity":1,"message":"328","line":10,"column":17,"nodeType":"318","messageId":"319","endLine":10,"endColumn":21},{"ruleId":"316","severity":1,"message":"329","line":28,"column":28,"nodeType":"318","messageId":"319","endLine":28,"endColumn":38},{"ruleId":"316","severity":1,"message":"330","line":1,"column":43,"nodeType":"318","messageId":"319","endLine":1,"endColumn":51},{"ruleId":"316","severity":1,"message":"331","line":29,"column":11,"nodeType":"318","messageId":"319","endLine":29,"endColumn":18},{"ruleId":"316","severity":1,"message":"332","line":32,"column":13,"nodeType":"318","messageId":"319","endLine":32,"endColumn":16},{"ruleId":"316","severity":1,"message":"333","line":32,"column":48,"nodeType":"318","messageId":"319","endLine":32,"endColumn":57},{"ruleId":"316","severity":1,"message":"334","line":34,"column":20,"nodeType":"318","messageId":"319","endLine":34,"endColumn":31},{"ruleId":"316","severity":1,"message":"335","line":34,"column":42,"nodeType":"318","messageId":"319","endLine":34,"endColumn":55},{"ruleId":"316","severity":1,"message":"329","line":8,"column":28,"nodeType":"318","messageId":"319","endLine":8,"endColumn":38},{"ruleId":"316","severity":1,"message":"336","line":16,"column":10,"nodeType":"318","messageId":"319","endLine":16,"endColumn":36},{"ruleId":"316","severity":1,"message":"337","line":44,"column":32,"nodeType":"318","messageId":"319","endLine":44,"endColumn":43},{"ruleId":"316","severity":1,"message":"338","line":44,"column":54,"nodeType":"318","messageId":"319","endLine":44,"endColumn":67},{"ruleId":"316","severity":1,"message":"339","line":48,"column":50,"nodeType":"318","messageId":"319","endLine":48,"endColumn":67},{"ruleId":"316","severity":1,"message":"340","line":8,"column":10,"nodeType":"318","messageId":"319","endLine":8,"endColumn":24},{"ruleId":"316","severity":1,"message":"341","line":22,"column":44,"nodeType":"318","messageId":"319","endLine":22,"endColumn":60},{"ruleId":"316","severity":1,"message":"342","line":22,"column":71,"nodeType":"318","messageId":"319","endLine":22,"endColumn":89},{"ruleId":"343","severity":2,"message":"344","line":68,"column":38,"nodeType":"345","endLine":68,"endColumn":45},{"ruleId":"316","severity":1,"message":"346","line":2,"column":17,"nodeType":"318","messageId":"319","endLine":2,"endColumn":25},{"ruleId":"316","severity":1,"message":"347","line":2,"column":27,"nodeType":"318","messageId":"319","endLine":2,"endColumn":41},{"ruleId":"316","severity":1,"message":"348","line":3,"column":10,"nodeType":"318","messageId":"319","endLine":3,"endColumn":16},{"ruleId":"316","severity":1,"message":"349","line":32,"column":23,"nodeType":"318","messageId":"319","endLine":32,"endColumn":35},{"ruleId":"316","severity":1,"message":"350","line":33,"column":23,"nodeType":"318","messageId":"319","endLine":33,"endColumn":35},{"ruleId":"316","severity":1,"message":"325","line":1,"column":41,"nodeType":"318","messageId":"319","endLine":1,"endColumn":50},{"ruleId":"316","severity":1,"message":"331","line":21,"column":11,"nodeType":"318","messageId":"319","endLine":21,"endColumn":18},{"ruleId":"316","severity":1,"message":"351","line":7,"column":10,"nodeType":"318","messageId":"319","endLine":7,"endColumn":25},{"ruleId":"316","severity":1,"message":"321","line":11,"column":10,"nodeType":"318","messageId":"319","endLine":11,"endColumn":12},{"ruleId":"316","severity":1,"message":"322","line":11,"column":14,"nodeType":"318","messageId":"319","endLine":11,"endColumn":20},{"ruleId":"316","severity":1,"message":"352","line":19,"column":27,"nodeType":"318","messageId":"319","endLine":19,"endColumn":37},{"ruleId":"316","severity":1,"message":"353","line":19,"column":48,"nodeType":"318","messageId":"319","endLine":19,"endColumn":60},{"ruleId":"316","severity":1,"message":"354","line":52,"column":15,"nodeType":"318","messageId":"319","endLine":52,"endColumn":35},{"ruleId":"316","severity":1,"message":"330","line":1,"column":17,"nodeType":"318","messageId":"319","endLine":1,"endColumn":25},{"ruleId":"304","replacedBy":"355"},{"ruleId":"306","replacedBy":"356"},{"ruleId":"304","replacedBy":"357"},{"ruleId":"306","replacedBy":"358"},{"ruleId":"316","severity":1,"message":"359","line":4,"column":10,"nodeType":"318","messageId":"319","endLine":4,"endColumn":17},{"ruleId":"316","severity":1,"message":"331","line":31,"column":11,"nodeType":"318","messageId":"319","endLine":31,"endColumn":18},{"ruleId":"316","severity":1,"message":"337","line":41,"column":32,"nodeType":"318","messageId":"319","endLine":41,"endColumn":43},{"ruleId":"316","severity":1,"message":"338","line":41,"column":54,"nodeType":"318","messageId":"319","endLine":41,"endColumn":67},{"ruleId":"316","severity":1,"message":"325","line":1,"column":17,"nodeType":"318","messageId":"319","endLine":1,"endColumn":26},{"ruleId":"316","severity":1,"message":"330","line":1,"column":28,"nodeType":"318","messageId":"319","endLine":1,"endColumn":36},{"ruleId":"316","severity":1,"message":"360","line":2,"column":10,"nodeType":"318","messageId":"319","endLine":2,"endColumn":21},{"ruleId":"316","severity":1,"message":"361","line":2,"column":23,"nodeType":"318","messageId":"319","endLine":2,"endColumn":34},{"ruleId":"316","severity":1,"message":"362","line":3,"column":10,"nodeType":"318","messageId":"319","endLine":3,"endColumn":25},{"ruleId":"316","severity":1,"message":"363","line":6,"column":10,"nodeType":"318","messageId":"319","endLine":6,"endColumn":29},{"ruleId":"304","replacedBy":"364"},{"ruleId":"306","replacedBy":"365"},{"ruleId":"316","severity":1,"message":"366","line":1,"column":17,"nodeType":"318","messageId":"319","endLine":1,"endColumn":28},{"ruleId":"316","severity":1,"message":"331","line":18,"column":11,"nodeType":"318","messageId":"319","endLine":18,"endColumn":18},"no-native-reassign",["367"],"no-negated-in-lhs",["368"],["367"],["368"],["367"],["368"],["367"],["368"],["367"],["368"],"@typescript-eslint/no-unused-vars","'USER_INFO_RESET' is defined but never used.","Identifier","unusedVar","'getUnreadMessages' is defined but never used.","'io' is defined but never used.","'Socket' is defined but never used.",["367"],["368"],"'useEffect' is defined but never used.",["367"],["368"],"'data' is assigned a value but never used.","'signinInfo' is assigned a value but never used.","'useState' is defined but never used.","'history' is assigned a value but never used.","'_id' is assigned a value but never used.","'updatedAt' is assigned a value but never used.","'errorDelete' is assigned a value but never used.","'loadingDelete' is assigned a value but never used.","'newNotificationUsingSocket' is defined but never used.","'errorSignin' is assigned a value but never used.","'loadingSignin' is assigned a value but never used.","'loadingUserDetail' is assigned a value but never used.","'LoadingSpinner' is defined but never used.","'errorPostContent' is assigned a value but never used.","'loadingPostContent' is assigned a value but never used.","react/jsx-no-undef","'Loading' is not defined.","JSXIdentifier","'Dispatch' is defined but never used.","'SetStateAction' is defined but never used.","'Button' is defined but never used.","'setFollowers' is assigned a value but never used.","'setFollowing' is assigned a value but never used.","'ChatMessageType' is defined but never used.","'errorUsers' is assigned a value but never used.","'loadingUsers' is assigned a value but never used.","'selectedUserFullName' is assigned a value but never used.",["367"],["368"],["367"],["368"],"'connect' is defined but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'getChatMessages' is defined but never used.","'initialAppStateType' is defined but never used.",["367"],["368"],"'useCallback' is defined but never used.","no-global-assign","no-unsafe-negation"]